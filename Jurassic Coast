<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
  <title>Query features from a FeatureLayerView - 4.3</title>

  <link rel="stylesheet" href="https://js.arcgis.com/4.3/esri/css/main.css">
  <script src="https://js.arcgis.com/4.3/"></script>

  <script>
    require([
        "esri/Map",
        "esri/views/MapView",
        "esri/layers/FeatureLayer",

        "dijit/a11yclick",

        "dojo/on",
        "dojo/dom",
        "dojo/dom-attr",
        "dojo/dom-construct",
        "dojo/domReady!"
      ],
      function(
        Map, MapView,
        FeatureLayer,
        a11yclick,
        on,
        dom, domAttr, domConstruct
      ) {

        var map = new Map({
          basemap: "hybrid"
        });

        var view = new MapView({
          container: "sceneDiv",
          map: map,
          center: [-3.0, 50.7],
          zoom: 14,
          padding: {
            right: 300
          }
        });

        var listNode = dom.byId("jurassic");

        /********************
         * Add feature layer
         ********************/

        // Create the PopupTemplate
        var popupTemplate = {
          title: "{TITLE}",
          content: "<p>The ages of the rock strata underfoot, from top to bottom, is given as millions of years ago (mya):<br>{DESCRIPTIO}</p>",
          actions:[{
          	id: "find-site",
          	text: "\ue619",
          	title: "Site information"
          }]
        };

        // Create the FeatureLayer using the popupTemplate
        var featureLayer = new FeatureLayer({
          url: "http://services6.arcgis.com/MlFyonGCf404aQCB/arcgis/rest/services/Rock_and_ages_6_17/FeatureServer",
          outFields: ["*"],
          popupTemplate: popupTemplate
        });
        map.add(featureLayer);

        var graphics;

        view.whenLayerView(featureLayer).then(function(lyrView) {
          lyrView.watch("updating", function(val) {
            if (!val) { // wait for the layer view to finish updating

              // query all the features available for drawing.
              lyrView.queryFeatures().then(function(results) {

                graphics = results;

                var fragment = document.createDocumentFragment();

                results.forEach(function(result, index) {
                  var attributes = result.attributes;
                  var name = attributes.TITLE 

                  // Create a list SSSIs in Cornwall
                  domConstruct.create("li", {
                    className: "panel-result",
                    tabIndex: 0,
                    "data-result-id": index,
                    textContent: name
                  }, fragment);
                });
                domConstruct.place(fragment, listNode, "only");
              });
            }
          });
        });

        // listen to click event on the zip code list
        on(listNode, on.selector("li", a11yclick), function(event) {
          var target = event.target;
          var resultId = domAttr.get(target, "data-result-id");

          // get the graphic corresponding to the clicked zip code
          var result = resultId && graphics && graphics[parseInt(resultId,
            10)];

          if (result) {
            // open the popup at the centroid of zip code polygon
            // and set the popup's features which will populate popup content and title.
            view.popup.open({
              features: [result],
              location: result.geometry.centroid
            });
          }
        });
	view.then(function() {
        var popup = view.popup;
        popup.viewModel.on("trigger-action", function(event) {
          if (event.action.id === "find-site") {
            var attributes = popup.viewModel.selectedFeature.attributes;
            // Get the "website" field attribute
            var info = attributes.IMAGE_LINK;
            // Make sure the "website" attribute value is not null
            if (info !== null) {
              // Open up a new browser using the URL value in the 'website' field
              window.open(info.trim());
              // If the "website" value is null, open a new window and Google search the name of the brewery
            } else {
              window.open("https://www.google.com/search?q=" +
                attributes.name);
            }
          }
        });
      });
      });
  </script>

  <style>
    html,
    body,
    #sceneDiv {
      height: 100%;
      width: 100%;
      margin: 0;
      padding: 0;
      font-family: sans-serif;
    }
    
    .panel-container {
      position: relative;
      width: 100%;
      height: 100%;
    }
    
    .panel-side {
      padding: 2px;
      box-sizing: border-box;
      width: 300px;
      height: 100%;
      position: absolute;
      top: 0;
      right: 0;
      color: #fff;
      background-color: rgba(0, 0, 0, 0.6);
      overflow: auto;
      z-index: 60;
    }
    
    .panel-side h2 {
      padding: 0 20px;
      margin: 20px 0;
    }
    
    .panel-side ul {
      list-style: none;
      margin: 0;
      padding: 0;
    }
    
    .panel-side li {
      list-style: none;
      padding: 10px 20px;
    }
    
    .panel-result {
      cursor: pointer;
      margin: 2px 0;
      background-color: rgba(0, 0, 0, 0.3);
    }
    
    .panel-result:hover,
    .panel-result:focus {
      color: orange;
      background-color: rgba(0, 0, 0, 0.75);
    }
  </style>

</head>

<body>
  <div class="panel-container">
    <div class="panel-side">
      <h2>Jurassic Coast Sections</h2>
      <ul id="jurassic">
        <li>Loading&hellip;</li>
      </ul>
    </div>
    <div id="sceneDiv"></div>
  </div>
</body>

</html>
